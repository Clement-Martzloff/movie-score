"""
Exposes a URL that specifies the behaviour of this scalar.
"""
directive @specifiedBy(
  """
  The URL that specifies the behaviour of this scalar.
  """
  url: String!
) on SCALAR

"""
The root mutation.
"""
type Mutation {
  upvoteMovie(input: UpvoteMovieInput): UpvoteMovieResponse
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

type OmdbMovie implements Node {
  """
  The ID of an object
  """
  id: ID!
  title: String
  year: String
  imdbId: String
  type: String
  posterUrl: String
  votes: Int
}

"""
A connection to a list of items.
"""
type OmdbMovieConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [OmdbMovieEdge]
}

"""
An edge in a connection.
"""
type OmdbMovieEdge {
  """
  The item at the end of the edge
  """
  node: OmdbMovie

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
The root query.
"""
type Query {
  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
  me(id: ID!): User
}

input UpvoteMovieInput {
  title: String!
}

type UpvoteMovieResponse {
  title: String
}

type User implements Node {
  """
  The ID of an object
  """
  id: ID!
  email: String!
  searchOmdbMovies(
    term: String
    after: String
    first: Int
    before: String
    last: Int
  ): OmdbMovieConnection
}
